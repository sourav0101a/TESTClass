/***************************************************************************************************
@Class Name : AEMUpdateLastLogin
@Description : This class will handle the logic to get cases and their feed items based on user's last login date/time
@Date           : 08Oct/2017
@Author         : SS
@Version        : 1.0
@Comments       : 
@Last Modified By       :Satyendra Shrote
@Last Modified Date     :08Oct/2017
    @Last Modified Comments   : /services/apexrest/user/AEMUpdateLastLogin/005g0000004ND8a   //userID
*****************************************************************************************************/
@RestResource(urlMapping='/user/AEMUpdateLastLogin/*')
global class AEMUpdateLastLogin {
    @HttpGet
    global static   Map<String,String> SetMyLastLoginDate(){  
        Map<String,String> Result   =   new Map<String,String>();
        String EmailId              =   '';
        String Status               =   'Failure';
        RestRequest req             =   RestContext.request; 
        List<String>Param           =   req.requestURI.split('/');             
        EmailId                     =   Param[Param.size()-1]; 
        List<User>listUserDetails   =   [SELECT Id,name FROM User where id=:EmailId ];
        MYTR_UserPreferences__c  UserRolePreferences = new   MYTR_UserPreferences__c();
        UserRolePreferences  =  [SELECT Id,UserPreferencesId__c,Active__c,First_Time_Login_Date__c,First_Time_Login__c,Last_Login_Time__c,productandservices__c,roleresponsibility__c FROM MYTR_UserPreferences__c  where UserPreferencesId__c =:listUserDetails[0].id ];
        if (UserRolePreferences != null){
                UserRolePreferences.Last_Login_Time__c = system.today();
                update UserRolePreferences;
                Status = 'Success';
        } 
        
        Result.put(Label.AEM_Result, Status); 
        return Result; 
    }

}



@isTest
public class AEMUpdateLastLoginTest {

    @testSetup
    static void setupTestData() {
        // Create a User
        User testUser = new User(
            FirstName = 'Test',
            LastName = 'User',
            Username = 'testuser@testorg.com',
            Email = 'testuser@testorg.com',
            Alias = 'tuser',
            TimeZoneSidKey = 'America/Los_Angeles',
            LocaleSidKey = 'en_US',
            EmailEncodingKey = 'UTF-8',
            ProfileId = [SELECT Id FROM Profile WHERE Name = 'Standard User'][0].Id,
            LanguageLocaleKey = 'en_US'
        );
        insert testUser;
        
        // Create a MYTR_UserPreferences__c record
        MYTR_UserPreferences__c userPreferences = new MYTR_UserPreferences__c(
            UserPreferencesId__c = testUser.Id,
            Active__c = true,
            First_Time_Login_Date__c = Date.today(),
            First_Time_Login__c = true,
            Last_Login_Time__c = Date.today().addDays(-10),
            productandservices__c = 'Test Product',
            roleresponsibility__c = 'Test Role'
        );
        insert userPreferences;
    }
    
    @isTest
    static void testSetMyLastLoginDate_Success() {
        // Retrieve test user
        User testUser = [SELECT Id FROM User WHERE Username = 'testuser@testorg.com' LIMIT 1];
        
        // Set mock request URL
        RestRequest req = new RestRequest();
        req.requestURI = '/services/apexrest/user/AEMUpdateLastLogin/' + testUser.Id;
        RestContext.request = req;
        
        // Call the method
        Test.startTest();
        Map<String, String> result = AEMUpdateLastLogin.SetMyLastLoginDate();
        Test.stopTest();
        
        // Validate result
        System.assertEquals('Success', result.get(Label.AEM_Result));
        
        // Validate that the Last_Login_Time__c was updated
        MYTR_UserPreferences__c userPref = [SELECT Last_Login_Time__c FROM MYTR_UserPreferences__c WHERE UserPreferencesId__c = :testUser.Id];
        System.assertEquals(Date.today(), userPref.Last_Login_Time__c);
    }

    @isTest
    static void testSetMyLastLoginDate_Failure() {
        // Set mock request URL with an invalid user ID
        RestRequest req = new RestRequest();
        req.requestURI = '/services/apexrest/user/AEMUpdateLastLogin/invalidUserId';
        RestContext.request = req;
        
        // Call the method
        Test.startTest();
        Map<String, String> result = AEMUpdateLastLogin.SetMyLastLoginDate();
        Test.stopTest();
        
        // Validate result is failure
        System.assertEquals('Failure', result.get(Label.AEM_Result));
    }
}


System.ListException: List index out of bounds: 0
Class.AEMUpdateLastLogin.SetMyLastLoginDate: line 24, column 1 - This line is following in the class
UserRolePreferences  =  [SELECT Id,UserPreferencesId__c,Active__c,First_Time_Login_Date__c,First_Time_Login__c,Last_Login_Time__c,productandservices__c,roleresponsibility__c FROM MYTR_UserPreferences__c  where UserPreferencesId__c =:listUserDetails[0].id ];

Class.AEMUpdateLastLoginTest.testSetMyLastLoginDate_Failure: line 66, column 1 - This line is following in test class
Map<String, String> result = AEMUpdateLastLogin.SetMyLastLoginDate();


